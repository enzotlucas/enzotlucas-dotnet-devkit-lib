name: Production / Deploy to nuget.org

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build, run tests and deploy to Nuget
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
    steps:

      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        working-directory: ./src
        run: dotnet restore

      - name: Build application
        working-directory: ./src
        run: dotnet build --configuration Release --no-restore

      - name: Run Tests
        working-directory: ./src
        run: dotnet test --no-restore --verbosity normal

      - name: SonarScanner
        uses: highbyte/sonarscan-dotnet@v2.1.3
        with:
          sonarProjectKey: enzotlucas_enzotlucas-dotnet-devkit-lib
          sonarProjectName:  enzotlucas-dotnet-devkit-lib
          sonarOrganization: enzotlucas
          dotnetBuildArguments: ./src
          dotnetTestArguments: ./src --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Package to NuGet.org
        working-directory: ./src/enzotlucas.DevKit/bin/Release
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_ORG_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols